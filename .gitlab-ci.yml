stages:
  - build
  - deploy

variables:
  ENV_NAME: "prod"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: "tcp://docker:2375"
  PROJECT_DIR: "/home/ubuntu/hackaton_assignment"

.default_job: &default_job
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache openssh git bash curl
    - mkdir -p ~/.ssh
    # Записуємо known_hosts без змін
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Видавлюємо зайві \r, якщо є, з ключа, і створюємо id_rsa
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - |
      cat > ~/.ssh/config <<EOF
      Host lntu-server
        HostName 18.197.176.80
        User ubuntu
        IdentityFile ~/.ssh/id_rsa
        StrictHostKeyChecking yes
        UserKnownHostsFile ~/.ssh/known_hosts
      EOF
    - chmod 600 ~/.ssh/config
    - ssh lntu-server "echo SSH connection works"

build:
  <<: *default_job
  stage: build
  script:
    - docker compose -f docker-compose.${ENV_NAME}.yml build

deploy_prod:
  <<: *default_job
  stage: deploy
  only:
    - main
  environment:
    name: production
    url: https://your-production-url.example.com
  script:
    - ssh lntu-server '
      set -e
      cd "$PROJECT_DIR"
      git reset --hard
      git pull origin main
      docker compose -f docker-compose.prod.yml down
      docker compose -f docker-compose.prod.yml up -d --build
      docker image prune -f
      '
  retry: 2
