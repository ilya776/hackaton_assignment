version: "3.9"

services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    expose:
      - "5432"  # do NOT publish to host in production
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user_db -d app_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: ../docker/django/Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - backend
      - frontend
    expose:
      - "8000"  # do NOT publish to host in production

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    restart: unless-stopped
    networks:
      - frontend
    ports:
      - "5173:5173"

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"
    restart: unless-stopped
    networks:
      - backend

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - backend
      - frontend


volumes:
  postgres_data:

networks:
  backend:
  frontend: